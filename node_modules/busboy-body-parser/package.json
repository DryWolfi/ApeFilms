{
  "_from": "busboy-body-parser",
  "_id": "busboy-body-parser@0.3.2",
  "_inBundle": false,
  "_integrity": "sha512-4Y69aQnNZ0LMBGnPGyDaaT6K5wDmsc6GfV3kNSgrzhnn+kf9+9pRI3xIxn7fMQ9lHrhG4RQau6leRV0WUA8Ogg==",
  "_location": "/busboy-body-parser",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "busboy-body-parser",
    "fetchSpec": "latest",
    "name": "busboy-body-parser",
    "raw": "busboy-body-parser",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/busboy-body-parser/-/busboy-body-parser-0.3.2.tgz",
  "_shasum": "e780170dc6185520567ee82a7844affc176a9f0c",
  "_spec": "busboy-body-parser",
  "_where": "/home/dimavov/webprogbase/labs/lab4",
  "bugs": {
    "url": "https://github.com/lennym/busboy-body-parser/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "bl": "^1.2.1",
    "busboy": "^0.2.9",
    "bytes": "^2.0.0",
    "debug": "^2.1.0"
  },
  "deprecated": false,
  "description": "Body parsing for multipart/form-data forms in Express.",
  "devDependencies": {
    "chai": "^1.9.2",
    "express": "^4.16.2",
    "mocha": "^2.0.1",
    "sinon": "^1.11.1",
    "sinon-chai": "^2.6.0"
  },
  "homepage": "https://github.com/lennym/busboy-body-parser#readme",
  "keywords": [
    "body-parser",
    "busboy",
    "express",
    "middleware",
    "multipart"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "busboy-body-parser",
  "optionalDependencies": {},
  "readme": "# busboy-body-parser\n\nBody parsing for multipart/form-data forms in Express.\n\nIt will add regular fields to req.body as per [body-parser](https://www.npmjs.org/package/body-parser) but will also add uploaded files to `req.files`.\n\n## Install\n\n`npm install busboy-body-parser`\n\n## Usage\n\n### Basic usage\n\n```javascript\nconst busboyBodyParser = require('busboy-body-parser');\napp.use(busboyBodyParser());\n```\n\n### Define a file-size limit\n\nThis is defined similarly to the `limit` option in [body-parser](https://www.npmjs.org/package/body-parser) but is applied to individual files rather than the total body size.\n\n```javascript\nconst busboyBodyParser = require('busboy-body-parser');\napp.use(busboyBodyParser({ limit: '5mb' }));\n```\n\nThis limit can be defined as either a number of bytes, or any string supported by [bytes](https://www.npmjs.org/package/bytes) - eg. `'5mb'`, `'500kb'`.\n\n### Uploading multiple files with the same key\n\nThe upload of multiple files with the same key is not enabled by default. If you wish to support this you will need to set the `multi` option to true.\n\n```javascript\nconst busboyBodyParser = require('busboy-body-parser');\napp.use(busboyBodyParser({ multi: true }));\n```\n\n_Important note_: if `multi` is set to true, then all `req.files[key]` will *always* be an array, irrespective of the nuber of files associated with that key.\n\n## Output\n\nThe middleware will add files to `req.files` in the following form:\n\n```\n// req.files:\n{\n    fieldName: {\n        data: Buffer(\"raw file data\"),\n        name: \"upload.txt\",\n        encoding: \"utf8\",\n        mimetype: \"text/plain\",\n        truncated: false\n    }\n}\n```\n\nIf a file has exceeded the file-size limit defined above it will have `data: null` and `truncated: true`:\n\n```\n// req.files:\n{\n    fieldName: {\n        data: null,\n        name: \"largefile.txt\",\n        encoding: \"utf8\",\n        mimetype: \"text/plain\",\n        truncated: true\n    }\n}\n```\n\nIf the `multi` property is set:\n\n```\n// req.files:\n{\n    fieldName: [{\n        data: Buffer(\"raw file data\"),\n        name: \"upload.txt\",\n        encoding: \"utf8\",\n        mimetype: \"text/plain\",\n        truncated: false\n    }]\n}\n```\n\n## Tests\n\n`npm test`\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lennym/busboy-body-parser.git"
  },
  "scripts": {
    "test": "mocha ./test/index.js"
  },
  "version": "0.3.2"
}
